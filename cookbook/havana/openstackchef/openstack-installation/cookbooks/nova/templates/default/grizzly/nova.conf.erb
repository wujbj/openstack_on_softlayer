# This file autogenerated by Chef
# Do not edit, changes will be overwritten
<% if not node["custom_template_banner"].nil? %>
<%= node["custom_template_banner"] %>
<% end %>
[DEFAULT]

# LOGS/STATE
verbose = <%= @verbose %>
debug = <%= @debug %>
<% if node["nova"]["ratelimit"]["api"]["enabled"] %>
auth_strategy=keystone
<% else %>
auth_strategy=keystone_nolimit
<% end %>

dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
<% if @use_syslog == true %>
use_syslog=<%= @use_syslog %>
syslog_log_facility=<%= @log_facility %>
<% end %>

instances_path=<%= @instances_path %>
state_path=<%= @state_path %>
lock_path=/var/lib/nova/tmp

##### RABBITMQ #####
<% if node['openstack']['mq']['service_type'] == "rabbit" %>
rabbit_password=guest
rabbit_port=<%= @rabbit_port %>
rabbit_host=<%= @rabbit_ipaddress %>
<% end %>

##### QPID #####
<% if node['openstack']['mq']['service_type'] == "qpid" %>
rpc_backend = nova.openstack.common.rpc.impl_qpid
qpid_password=guest
qpid_port = <%= @qpid_port %>
qpid_hostname=<%= @qpid_ipaddress %>
<% end %>

# https://bugs.launchpad.net/bugs/1178375
# Per Russel Bryant's email (6/11/13)
amqp_rpc_single_reply_queue=True

##### NOTIFY #####
notify_on_state_change = <%= @notify_on_state_change %>
notification_driver = <%= @notification_driver %>

##### SCHEDULER #####
# scheduler_manager=nova.scheduler.manager.SchedulerManager
compute_scheduler_driver=<%= @scheduler_driver %>
scheduler_available_filters=nova.scheduler.filters.all_filters
#TODO remove below commented after testing
#scheduler_available_filters=nova.scheduler.filters.standard_filters
# which filter class names to use for filtering hosts when not specified in the request.
scheduler_max_attempts=<%= @scheduler_max_attempts %>
scheduler_default_filters=<%= @scheduler_default_filters %>
least_cost_functions=<%= @scheduler_least_cost_functions %>
node_availability_zone=<%= @availability_zone %>
default_schedule_zone=<%= @default_schedule_zone %>

<% if @network_type == "quantum" %>
injected_network_template = /usr/share/nova/interfaces.template
##### quantum #####
network_api_class=nova.network.quantumv2.api.API
quantum_admin_username=<%= @quantum_username %>
quantum_admin_password=<%= @quantum_password %>
quantum_admin_auth_url=http://<%= @keystone_api_ipaddress %>:<%= @keystone_service_port %>/v2.0
quantum_auth_strategy=keystone
quantum_admin_tenant_name=<%= @quantum_tenant %>
quantum_url=http://<%= @quantum_server_url %>:<%= @quantum_server_port %>/

<% if @quantum_agent == "openvswitch" %>
libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtOpenVswitchDriver
linuxnet_interface_driver=nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
<% elsif @quantum_agent == "linuxbridge" %>
libvirt_vif_driver=nova.virt.libvirt.vif.QuantumLinuxBridgeVIFDriver
linuxnet_interface_driver=nova.network.linux_net.QuantumLinuxBridgeInterfaceDriver
<% end %>
<% else %>
##### NETWORK #####
network_manager=<%= @network_manager %>
#--flat_interface=eth1
#--flat_network_dhcp_start=10.20.1.2
multi_host=<%= @multi_host %>
public_interface=<%= @public_interface %>
<% if @network_manager == "nova.network.manager.VlanManager" %>
firewall_driver=<%= @firewall_driver %>
vlan_interface=<%= @vlan_interface %>
vlan_start=<%= @vlan_start %>
flat_injected=false
<% end %>
fixed_range=<%= @fixed_range %>
dmz_cidr=<%= @dmz_cidr %>
<% end %>
# Send a dhcp release on instance termination (default: false)
force_dhcp_release=<%= @force_dhcp_release %>
# Send gratuitous ARPs for HA setup (default: false)
send_arp_for_ha=<%= @send_arp_for_ha %>
# Auto-assign floating ip to VM (default: false)
auto_assign_floating_ip=<%= @auto_assign_floating_ip %>
use_single_default_gateway=<%= @use_single_default_gateway %>
<% if @virt_type == "qemu" -%>
libvirt_use_virtio_for_bridges=True
libvirt_cpu_mode = none
<% else -%>
libvirt_use_virtio_for_bridges=true
<% end -%>
dhcp_domain=<%= @dhcp_domain %>
libvirt_vif_type=ethernet

##### GLANCE #####
img_handlers=loop,guestfs,nbd
image_service=nova.image.glance.GlanceImageService
glance_api_servers=<%= @glance_serverlist %>
libvirt_images_type=<%= @libvirt_images_type %>
use_cow_image=<%= @use_cow_images %>

##### COMPUTE #####
compute_manager=nova.compute.manager.ComputeManager
sql_connection=<%= @db_connection %>
#connection_type=libvirt
compute_driver=libvirt.LibvirtDriver
libvirt_type=<%= @virt_type %>
# Inject the ssh public key at boot time (default: true)
libvirt_inject_key=<%= @libvirt_inject_key %>
# Command prefix to use for running commands as root (default: sudo)
rootwrap_config=/etc/nova/rootwrap.conf
# Should unused base images be removed? (default: false)
remove_unused_base_images=<%= @remove_unused_base_images %>
# Unused resized base images younger than this will not be removed (default: 3600)
remove_unused_resized_minimum_age_seconds=<%= @remove_unused_resized_minimum_age_seconds %>
# Unused unresized base images younger than this will not be removed (default: 86400)
remove_unused_original_minimum_age_seconds=<%= @remove_unused_original_minimum_age_seconds %>
# Write a checksum for files in _base to disk (default: false)
checksum_base_images=<%= @checksum_base_images %>

##### VNCPROXY #####
#novncproxy_base_url=<%= @novncproxy_base_url %>
#xvpvncproxy_base_url=<%= @xvpvncproxy_base_url %>
# This is only required on the server running xvpvncproxy
#xvpvncproxy_host=<%= @xvpvncproxy_bind_host %>
#xvpvncproxy_port=<%= @xvpvncproxy_bind_port %>
vncserver_listen=0.0.0.0
#vncserver_proxyclient_address=<%= @vncserver_proxyclient_address %>

##### MISC #####
# force backing images to raw format
force_raw_images=<%= @force_raw_images %>
allow_same_net_traffic=<%= @allow_same_net_traffic %>
osapi_max_limit=<%= @osapi_max_limit %>
snapshot_image_format=<%= @snapshot_image_format %>
start_guests_on_host_boot=<%= @start_guests_on_host_boot %>
resume_guests_state_on_host_boot=<%= @resume_guests_state_on_host_boot %>
# number of security groups per project (default: 10)
quota_security_groups=<%= @quota_security_groups %>
# number of security rules per security group (default: 20)
quota_security_group_rules=<%= @quota_security_group_rules %>

<%- if /FilterScheduler/.match(@scheduler_driver) or
       /MultiScheduler/.match(@scheduler_driver) %>
# FilterScheduler Only Options
<%- if /ComputeFilter/.match(@scheduler_default_filters) %>
# virtual CPU to Physical CPU allocation ratio (default: 16.0)
cpu_allocation_ratio=<%= @cpu_allocation_ratio %>
<%- end %>
<%- if /RamFilter/.match(@scheduler_default_filters) %>
# virtual ram to physical ram allocation ratio (default: 1.5)
ram_allocation_ratio=<%= @ram_allocation_ratio %>
<%- end %>
<%- elsif /SimpleScheduler/.match(@scheduler_driver) %>
# SimpleScheduler Only Options
# maximum number of instance cores to allow per host
max_cores=<% @cpu_allocation_ratio.to_i * node["cpu"]["total"].to_i %>
<%- end %>

<% if %w(fedora redhat centos).include? node.platform -%>
# Adding support for non-modded euca2ools to display ip address info
# https://bugs.launchpad.net/nova/+bug/901594
ec2_private_dns_show_ip=True
<% end -%>

##### KEYSTONE #####
keystone_ec2_url=http://<%= @keystone_api_ipaddress %>:<%= @keystone_service_port %>/v2.0/ec2tokens

##### VOLUMES #####
# iscsi target user-land tool to use
# NOTE(darren): (this is a nova-volume attribute - cinder carries this
# separately in it's own cinder.conf
iscsi_helper=<%= @iscsi_helper %>

# when in folsom...
volume_manager=cinder.volume.manager.VolumeManager
volume_api_class=nova.volume.cinder.API
enabled_apis=ec2,osapi_compute,metadata

##### API #####
ec2_workers=<%= node["cpu"]["total"].to_i %>
osapi_compute_workers=<%= node["cpu"]["total"].to_i %>
metadata_workers=<%= node["cpu"]["total"].to_i %>
#osapi_volume_workers=<%= node["cpu"]["total"].to_i %>

